library(plyr)
library(dplyr)
funlist(md1.tbl, exp)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.tbl
md1
subset(dat)
rowSums
rowSums(dat)
names(dat)
rowSums(dat[5:7])
rowSums(dat[,5:7])
apply(dat,2,sum)
apply(dat,1,sum)
sum(dat$home.score)
table
table(dat)
melt(home.team~home.score,data=dat)
library(reshape)
library(reshape2)
melt(home.team~home.score,data=dat)
args(melt)
dcast(home.team~home.score,data=dat)
args(dcast)
dcast(home.team~home.score+away.score,data=dat)
dcast(home.team~home.score,data=dat)
summary(dat)
by(dat$home.team,dat$homescore,sum)
args(tapply)
tapply(dat,sum)
aggregate(dat$home.score,dat$home.score)
aggregate(dat$home.score,dat$home.score, sum)
aggregate(dat$home.score,dat$home.score, SUM)
aggregate(dat$home.score, list(dat$home.score), sum)
apply(dat,1,sum)
apply(dat$home.score,1,sum)
apply(dat,1,function(x) sum(x))
apply(dat,1,function(x) sum(x$home.score))
apply(dat$home.score,1,function(x) sum(x))
cast(home.team~home.score,data=dat)
dcast(home.team~home.score,data=dat)
args(tapply)
tapply(dat, sum)
tapply(dat, 1, function(xï¼‰ sum(x))
ddply(dat, "home.team", summarise,
score    = sum(home.score),
mean = mean(home.score),
sd   = sd(home.score),
se   = sd / sqrt(nrow(dat)))
sim <- simulate(md1)
md1
dat
head(dat)
sim2 <- simulate(md2, hdv=='1')
sim2 <- simulate(md2, 'hdv')
sim2 <- simulate(md2, dat$hdv)
sim2 <- simulate(md2, venue=1)
sim2 <- simulate(md2, venue='1')
sim2 <- simulate(md2, venue='Cardiff City Stadium')
args(simulate)
sim2 <- simulate(md2, hvd=1)
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off date
# Simulate model 1
# Example : predict a match kick-off on 2014-05-13
sim1 <- simulate(md1)
predict(sim1, date=as.Date('2014-05-13'))
# Simulate model 2
sim2 <- simulate(md2, hdv=1)
#Extra arguments (besides team and venue) passed in should correspond to columns in the team or match files.
#The following extra arguments are not in the team or match files (names are not case sensitive): hvd
predict(sim2, hdv=1, date=as.Date('2014-05-13'))
# Simulate model 3
# Example : predict a match kick-off at Cardiff City Stadium on 2014-05-13
sim3 <- simulate(md3, venue='Cardiff City Stadium')
predict(sim3, venue='Cardiff City Stadium', date=as.Date('2014-05-13'))
install.packages(c("actuar", "fda", "httr", "packrat", "quantmod", "roxygen2", "stringdist", "stringi"))
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
library(shiny)
library(fbRanks)
library(XML)
library(plyr)
library(dplyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
dat$venue <- as.character(dat$venue)
teams <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
dat$hdv <- ifelse(dat$home.team==teams$name & dat$venue==teams$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
#match(dat$home.team,teams$name)
#match(dat$venue,teams$venue)
rm(url, tbl)
save(dat, file='dat.Rda')
# ===============================================================================
# Dixon & Coles poisson model, we can also add some more effect like weather, pitch condition, home ground advantages etc.
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date)) #without other effects
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #with home team advantage
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with venue effects
# -------------------------------------------------------------------------------
# model 1 measure the team attack and defence index.
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.tbl <- data.frame(coef(md1))[c(1:nrow(teams)),-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.hm <- ddply(dat, "home.team", summarise, score = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(dat)))
md1.aw <- ddply(dat, "away.team", summarise, score = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(dat)))
# model 2 measure the team attack, defence and home ground advantage index.
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.tbl <- data.frame(coef(md2))[c(1:nrow(teams)),-1]; names(md2.tbl) <- c('attack','defence')
md2.tbl <- data.frame(team=sort(as.character(teams$name)),md2.tbl)
md2.tbl$attack <- exp(md2.tbl$attack); md2.tbl$defence <- exp(md2.tbl$defence); row.names(md2.tbl) <- NULL
md2.hm <- ddply(dat, "home.team", summarise, score = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(dat)))
md2.aw <- ddply(dat, "away.team", summarise, score = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(dat)))
# model 3 measure the team attack, defence and venue index.
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.tbl <- data.frame(coef(md3))[c(1:nrow(teams)),-1]; names(md3.tbl) <- c('attack','defence')
md3.tbl <- data.frame(team=sort(as.character(teams$name)), md3.tbl)
md3.tbl$attack <- exp(md3.tbl$attack); md3.tbl$defence <- exp(md3.tbl$defence); row.names(md3.tbl) <- NULL
md3.hm <- ddply(dat, "home.team", summarise, score = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(dat)))
md3.aw <- ddply(dat, "away.team", summarise, score = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(dat)))
# ===============================================================================
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off date
# Simulate model 1
# Example : predict a match kick-off on 2014-05-13
sim1 <- simulate(md1)
predict(md1, date=as.Date('2014-05-13'))
# Simulate model 2
sim2 <- simulate(md2, hdv=1)
#Extra arguments (besides team and venue) passed in should correspond to columns in the team or match files.
#The following extra arguments are not in the team or match files (names are not case sensitive): hvd
predict(md2, hdv=1, date=as.Date('2014-05-13'))
# Simulate model 3
# Example : predict a match kick-off at Cardiff City Stadium on 2014-05-13
sim3 <- simulate(md3, venue='Cardiff City Stadium')
predict(md3, venue='Cardiff City Stadium', date=as.Date('2014-05-13'))
library('magrittr')
mydir <- paste0(getwd(),'/GitHub/englianhu/Dixon-Coles1996')
library(knitr)
library(markdown)
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html(paste0(mydir(), 'knitr/Dixon-Coles1996.Rmd'))
browseURL(paste0(mydir(), 'knitr/Dixon-Coles1996.html'))
mydir <- paste0(getwd(),'/GitHub/englianhu/Dixon-Coles1996')
library(knitr)
library(markdown)
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html(paste0(mydir, 'knitr/Dixon-Coles1996.Rmd'))
browseURL(paste0(mydir, 'knitr/Dixon-Coles1996.html'))
shiny::runGitHub('ShinyApps', 'jbryer', subdir='gambler')
shiny::runGitHub('Dixon-Coles1996', 'englianhu', subdir='shiny')
getwd()
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
getwd()
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
getwd()
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny/')
getwd()
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
Q
runGitHub("shinyExample", "nosson")
load("C:/Users/Scibrokes Trading/Downloads/mousedata.rda")
mat
attributes(mat)
class(mat)
names(mat)
dim(mat)
head(mat)
rm(mat)
requiredPakcges
requiredPackges
requiredPackages
source('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/Dixon-Coles.R')
source('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/Dixon-Coles1996.R')
source('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/Dixon-Coles1996.R')
# ===============================================================================
library('shiny')
library('shinyapps')
library('devtools')
library('fbRanks')
library('XML')
library('plyr')
library('dplyr')
# Load soccer matches data
load('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.Rda')
#scores <- read.csv('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.csv')
scores <- create.fbRanks.dataframes('scores.csv')
teams <- scores$scores[order(scores$scores$date, decreasing=T) & !duplicated(scores$scores$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
scores <- create.fbRanks.dataframes(C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.csv')
teams <- scores$scores[order(scores$scores$date, decreasing=T) & !duplicated(scores$scores$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
scores <- create.fbRanks.dataframes('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.csv')
teams <- scores$scores[order(scores$scores$date, decreasing=T) & !duplicated(scores$scores$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
# Dixon & Coles poisson model, we can also add some more effect like weather, pitch condition, home ground advantages etc.
md1 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date))#, silent=T) #without other effects
md2 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date))#, silent=T) #with home team advantage
md3 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date), add='venue')#, silent=T) #with venue effects
# -------------------------------------------------------------------------------
# model 1 measure the team attack and defence index.
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.tbl <- data.frame(coef(md1))[c(1:nrow(scores$teams)),-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md1.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# model 2 measure the team attack, defence and home ground advantage index.
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.tbl <- data.frame(coef(md2)$coef.list); names(md2.tbl) <- c('attack','defence','hdv')
md2.tbl
coef(md2)$coef.list
coef(md2)$coef.vector
coef(md2)
md2 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date), add='hdv')#, silent=T) #with home team advantage
# model 2 measure the team attack, defence and home ground advantage index.
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.tbl <- data.frame(coef(md2)$coef.list); names(md2.tbl) <- c('attack','defence','hdv')
md2.tbl <- data.frame(team=sort(as.character(teams$name)),md2.tbl)
md2.tbl$attack <- exp(md2.tbl$attack); md2.tbl$defence <- exp(md2.tbl$defence); row.names(md2.tbl) <- NULL
md2.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md2.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# model 3 measure the team attack, defence and venue index.
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.tbl <- data.frame(coef(md3))[c(1:nrow(scores$teams)),-1]; names(md3.tbl) <- c('attack','defence')
md3.tbl <- data.frame(team=sort(as.character(teams$name)), md3.tbl)
md3.tbl$attack <- exp(md3.tbl$attack); md3.tbl$defence <- exp(md3.tbl$defence); row.names(md3.tbl) <- NULL
md3.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md3.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# ===============================================================================
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off scores
# Simulate model 1
# Example : predict a match kick-off on last match-day
sim1 <- simulate(md1)
predict(md1, date=as.Date(max(scores$scores$date)))
pr1 <- predict(md1)
# Simulate model 2
# Example : predict a match kick-off at home ground on last match-day
sim2 <- simulate(md2, hdv=1)
predict(md2, hdv=1, date=as.Date(max(scores$scores$date)))
pr2 <- predict(md2, hdv=1)
# Simulate model 3
# Example : predict a match kick-off at Cardiff City Stadium on last match-day
sim3 <- simulate(md3, venue='Cardiff City Stadium')
predict(md3, venue='Cardiff City Stadium', date=as.Date(max(scores$scores$date)))
pr3 <- predict(md3, venue='Cardiff City Stadium')
pr1
attributes(pr1)
attributes(pr2)
attributes(pr3)
head(pr1$scores)
head(pr1$home.goals.sum)
(pr1$home.goals.sum)
runGitHub("shinyExample", "nosson")
library(shiny)
library(data.table)
library(reshape2)
options(shiny.reactlog=TRUE);
runGitHub('Developingdataproducts-1', 'englianhu')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
library(shiny)
library(data.table)
library(reshape2)
options(shiny.reactlog=TRUE);
runGitHub('Developingdataproducts-1', 'englianhu')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
library(shiny)
# Load soccer matches data
#load('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.Rda')
#scores <- read.csv('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.csv')
scores <- create.fbRanks.dataframes('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/scores.csv')
teams <- scores$scores[order(scores$scores$date, decreasing=T) & !duplicated(scores$scores$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
# Dixon & Coles poisson model, we can also add some more effect like weather, pitch condition, home ground advantages etc.
md1 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date))#, silent=T) #without other effects
md2 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date), add='hdv')#, silent=T) #with home team advantage
md3 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date), add='venue')#, silent=T) #with venue effects
# -------------------------------------------------------------------------------
# model 1 measure the team attack and defence index.
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.tbl <- data.frame(coef(md1))[c(1:nrow(scores$teams)),-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md1.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# model 2 measure the team attack, defence and home ground advantage index.
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.tbl <- data.frame(coef(md2)$coef.list); names(md2.tbl) <- c('attack','defence','hdv')
md2.tbl <- data.frame(team=sort(as.character(teams$name)),md2.tbl)
md2.tbl$attack <- exp(md2.tbl$attack); md2.tbl$defence <- exp(md2.tbl$defence); row.names(md2.tbl) <- NULL
md2.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md2.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# model 3 measure the team attack, defence and venue index.
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.tbl <- data.frame(coef(md3))[c(1:nrow(scores$teams)),-1]; names(md3.tbl) <- c('attack','defence')
md3.tbl <- data.frame(team=sort(as.character(teams$name)), md3.tbl)
md3.tbl$attack <- exp(md3.tbl$attack); md3.tbl$defence <- exp(md3.tbl$defence); row.names(md3.tbl) <- NULL
md3.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md3.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# ===============================================================================
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off scores
# Simulate model 1
# Example : predict a match kick-off on last match-day
sim1 <- simulate(md1)
predict(md1, date=as.Date(max(scores$scores$date)))
pred1 <- predict(md1)
save(pred1, file='C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/pred1.Rda')
# Simulate model 2
# Example : predict a match kick-off at home ground on last match-day
sim2 <- simulate(md2, hdv=1)
predict(md2, hdv=1, date=as.Date(max(scores$scores$date)))
pred2 <- predict(md2, hdv=1)
save(pred2, file='C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/pred2.Rda')
# Simulate model 3
# Example : predict a match kick-off at Cardiff City Stadium on last match-day
sim3 <- simulate(md3, venue='Cardiff City Stadium')
predict(md3, venue='Cardiff City Stadium', date=as.Date(max(scores$scores$date)))
pred3 <- predict(md3, venue='Cardiff City Stadium')
save(pred3, file='C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/pred3.Rda')
# ===============================================================================
# Preview the models
attributes(pr1)
head(pr1$scores)
attributes(pr2)
head(pr2$scores)
attributes(pr2)
head(pr2$scores)
# ===============================================================================
# Apply anova to compare the models
#Show the predicted versus actual scores
rsd1 <- residuals(md1)
rsd2 <- residuals(md2)
rsd3 <- residuals(md3)
anova (md1,md2,md3, test='Chisq')
attributes(rsd1)
attributes(rsd2)
attributes(rsd3)
library(data.table)
?data.table
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/DC Model - Shiny')
Sys.getlocal()
Sys.getlocale()
library('digest')
install.packages('digest')
library('digest')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/DC Model - Shiny')
install_github("nosson/metagenomeSeq")
library('Biobase')
install.packages(c('Biobase','limma','metagenomeSeq'))
install.packages('Biobase')
install.packages('oimma')
mydir <- 'C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/'
saveEPL(season = '2013-2014', saveDir=mydir)
library('shiny')
library('shinyapps')
library('devtools')
library('fbRanks')
library('XML')
library('plyr')
library('dplyr')
source('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/function/scrapeEPL.R')
mydir <- 'C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/'
saveEPL(season = '2013-2014', saveDir=mydir)
mydir <- 'C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/'
saveEPL(season = '2013-2014', saveDir=mydir)
mydir <- 'C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/'
scrapeEPL(season = '2013-2014', saveDir=mydir)
source('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/function/scrapeEPL.R')
# scrape EPL soccer matches from official website
mydir <- 'C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/'
scrapeEPL(season = '2013-2014', saveDir=mydir)
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/DC Model - Shiny')
library('shiny')
library('shinyapps')
library('devtools')
library('fbRanks')
library('XML')
library('plyr')
library('dplyr')
source('C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/function/scrapeEPL.R')
# scrape EPL soccer matches from official website
mydir <- 'C:/Users/Scibrokes Trading/Documents/GitHub/englianhu/Dixon-Coles1996/data/'
scrapeEPL(season = '2013-2014', saveDir=mydir)
# Load soccer matches dataframe in fbRanks class
scores <- create.fbRanks.dataframes(paste0(mydir,'scores.csv'))
teams <- scores$scores[order(scores$scores$date, decreasing=T) & !duplicated(scores$scores$venue),][c('home.team','venue')]; names(teams)[1] <- 'name'
# Dixon & Coles poisson model, we can also add some more effect like weather, pitch condition, home ground advantages etc.
md1 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date))#, silent=T) #without other effects
md2 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date), add='hdv')#, silent=T) #with home team advantage
md3 <- rank.teams(scores$scores, min.date=min(scores$scores$date),max.date=max(scores$scores$date), add='venue')#, silent=T) #with venue effects
# -------------------------------------------------------------------------------
# model 1 measure the team attack and defence index.
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.tbl <- data.frame(coef(md1))[c(1:nrow(scores$teams)),-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md1.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# model 2 measure the team attack, defence and home ground advantage index.
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.tbl <- data.frame(coef(md2)$coef.list); names(md2.tbl) <- c('attack','defence','hdv')
md2.tbl <- data.frame(team=sort(as.character(teams$name)),md2.tbl)
md2.tbl$attack <- exp(md2.tbl$attack); md2.tbl$defence <- exp(md2.tbl$defence); row.names(md2.tbl) <- NULL
md2.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md2.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# model 3 measure the team attack, defence and venue index.
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.tbl <- data.frame(coef(md3))[c(1:nrow(scores$teams)),-1]; names(md3.tbl) <- c('attack','defence')
md3.tbl <- data.frame(team=sort(as.character(teams$name)), md3.tbl)
md3.tbl$attack <- exp(md3.tbl$attack); md3.tbl$defence <- exp(md3.tbl$defence); row.names(md3.tbl) <- NULL
md3.hm <- ddply(scores$scores, "home.team", summarise, scores = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(scores$scores)))
md3.aw <- ddply(scores$scores, "away.team", summarise, scores = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(scores$scores)))
# ===============================================================================
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off scores
# Simulate model 1
# Example : predict a match kick-off on last match-day
sim1 <- simulate(md1)
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
names(scoreas)
names(scores)
head(scores$scores)
names(rsd1)
rsd1[[1]]
head(data.frame(scores$scores))
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny', display.mode='showcase')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny', display.mode='showcase')
shiny::runGitHub('Dixon-Coles1996', 'englianhu', subdir='shiny', display.mode='showcase')
shiny::runGitHub('Dixon-Coles1996', 'englianhu', subdir='shiny', display.mode='showcase')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny', display.mode='showcase')
rm(list=ls())
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny', display.mode='showcase')
library(c("shiny","shinyapps","devtools","fbRanks","XML","plyr","dplyr"))
libraries
libary
require(c("shiny","shinyapps","devtools","fbRanks","XML","plyr","dplyr"))
require(list("shiny","shinyapps","devtools","fbRanks","XML","plyr","dplyr"))
shiny::runApp('GitHub/englianhu/Dixon-Coles1996/shiny', display.mode='showcase')
