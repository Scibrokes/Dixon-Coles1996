md2
print(md1,dat$hdv)
print(md1,hdv)
print(md1,hmd)
print(md1,teams)
md1.att
sum(md1.att)
sum(md1.def)
sum(md1.att)+
sum(md1.def)
exp(-sum(md1.att))
exp(-sum(md1.def))
mean(exp(md1.att))
mean(exp(md1.def))
mean(exp(md2.att))
mean(exp(md2.def))
md1
md1$attack
attributes(md1)
md1$fit
2.47+1.26
(2.47+1.26)/2
View(dat)
write.csv(dat,'dat.csv')
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with explanatory variable - venue
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.df <- data.frame(att=exp(md1.att),def=exp(md1.def))
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.hdv
simulate(md1)
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
library(shinyAce)
library('shinyAce')
install.packages('shinyAce')
install.packages(c("shinyBS", "shinyFiles", "shinyRGL"))
runApp()
library(shiny)
runApp()
runGitHub('Dixon-Coles1996','englianhu')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
runGitHub("shinyExample", "nosson")
library(shiny)
library(fbRanks)
library(XML)
library(plyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
teams <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
dat$hdv <- ifelse(dat$home.team==teams$name & dat$venue==teams$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
#match(dat$home.team,teams$name)
#match(dat$venue,teams$venue)
rm(url, tbl)
save(dat, file='dat.Rda')
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date)) #without explanatory variable
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #with explanatory variable - home team advantage
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with explanatory variable - venue
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.df <- data.frame(att=exp(md1.att),def=exp(md1.def))
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md1
class(md1)
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
Q
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
as.data.frame(md1)
unclass(md1)
data.table
library(data.table)
data.table(md1)
data.table(md1$fit$cluster.1)
coef(md1$fit$cluster.1)
create.fbRanks.dataframes(md1)
fbRanks.dataframes(md1)
class(dat$venue)
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
rank.team
rank.teams
names(coef(md1)$coef.list)
names(coef(md2)$coef.list)
names(coef(md3)$coef.list)
library(shiny)
library(shinyapps)
library(shiny)
library(fbRanks)
library(XML)
library(plyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
dat$venue <- as.character(dat$venue)
teams <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
dat$hdv <- ifelse(dat$home.team==teams$name & dat$venue==teams$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
head(dat)
dat2 <- dat
dat2$home.team <- paste0('att.',home.team)
dat2$home.team <- paste0('att.',dat2$home.team)
dat2$away.team <- paste0('att.',dat2$away.team)
dat3=dat2
dat3$home.score <- dat2$away.score
dat3$away.score <- dat2$home.score
rbind(dat2,dat3)
dat3$home.team <- paste0('def.',dat2$home.team)
dat3$away.team <- paste0('def.',dat2$away.team)
dat2 <- rbind(dat2,dat3)
rm(dat3)
md.test <- glm(home.teams~home.scores+away.scores,dat2)
md.test <- glm(home.teams~home.scores+away.scores,dat2,family='poisson')
md.test <- glm(home.team~home.scores + away.scores, data=dat2, family='poisson')
head(dat2)
md.test <- glm(home.team~home.score + away.score, data=dat2, family='poisson')
class(dat2$home.team)
class(dat2$home.score)
class(dat2$away.score)
md.test <- glm(as.factor(home.team)~home.score + away.score, data=dat2, family='poisson')
dat2$home.team <- factor(dat2$home.team)
dat2$away.team <- factor(dat2$away.team)
md.test <- glm(as.factor(home.team)~home.score + away.score, data=dat2, family='poisson')
exp(0)
exp(-1)
md.test
md.hm <- glm(home.score ~ home.score, data=dat2, family='poisson')
md.aw <- glm(away.score ~ away.score, data=dat2, family='poisson')
md.hm <- glm(home.score ~ home.home, data=dat2, family='poisson')
md.hm <- glm(home.score ~ home.team, data=dat2, family='poisson')
md.aw <- glm(away.score ~ away.team, data=dat2, family='poisson')
md.hm
md.hm <- glm(home.score ~ home.team-1, data=dat2, family='poisson')
md.aw <- glm(away.score ~ away.team-1, data=dat2, family='poisson')
md.hm
data.frame(hm=exp(coef(md.hm)),aw=exp(coef(md.aw)))
nrow(data.frame(hm=exp(coef(md.hm)),aw=exp(coef(md.aw))))
rm(md.test)
#match(dat$home.team,teams$name)
#match(dat$venue,teams$venue)
rm(url, tbl)
save(dat, file='dat.Rda')
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date)) #without other effects
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #with home team advantage
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with venue effects
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.df <- data.frame(att=exp(md1.att),def=exp(md1.def))
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md1.att
md1.def
sum(md1.att)
sum(md1.def)
-sum(md1.att)
sum(coef(md1.att))
sum(exp(md1.att))
sum(exp(md1.def))
mean(exp(md1.att))
mean(exp(md1.def))
mean(dat$home.score)
mean(dat$away.score)
mean(dat$home.score)/mean(dat$away.score)
mean(exp(md1.att))
mean(exp(md1.def))
mean(exp(md2.att))
mean(exp(md2.def))
rank.teams
md1.att
-sum(md1.att)
-sum(md1.def)
exp(-sum(md1.def))
c(exp(-sum(md1.def)),exp(md1.def))
subset(dat,home.team=='Arsenal')
subset(dat,away.team=='Arsenal')
exp(-sum(md1.att))
exp(-sum(md1))
exp(-sum(md1$coef))
exp(-sum(md1.att,md1.def))
1-exp(-sum(md1.att,md1.def))
exp(-sum(md1.def))
exp(-sum(md1.att))+exp(-sum(md1.def))
md1.att+md1.def
sum(md1.att)+sum(md1.def)
-sum(md1.att)+sum(md1.def)
-sum(md1.att)-sum(md1.def)
exp(-sum(md1.att)-sum(md1.def))
md1$coef
md1
coef(md1)
coef(md1)
md1.att
md1.def
data.frame(coef(md1))
coef(md1)
matrix(coef(md1))
rbind(coef(md1))
data.frame(coef(md1))[-1]
xep(0)
exp(0)
md1
data.frame(coef(md1))[-1]
exp(0.33931565)
1.65/1.18
nrow(treams)
nrow(teams)
data.frame(coef(md1))[nrow(team),-1]
data.frame(coef(md1))[nrow(teams),-1]
data.frame(coef(md1))[-1][nrow(teams)]
data.frame(coef(md1))[-1]
md1.tbl <- data.frame(coef(md1))[-1]
md1.tbl <- md1.tbl[nrow(teams),]
row.names(md1.tbl) <- gsub('attack', '', row.names(md1.tbl))
md1.tbl
md1.tbl <- data.frame(coef(md1))[-1]
md1.tbl
class(md1.tbl)
nrow(teams)
nrow(md1.tbl)
md1.tbl[20,]
md1.tbl <- data.frame(coef(md1))[-1]
data.frame(row.names(md1.tbl),md1.tbl)
teams
teams$name
sort(teams$name)
sort(as.character(teams$name))
md1.tbl <- data.frame(coef(md1))[-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
md1.tbl
row.names(md1.tbl) <- NULL
md1.tbl[20,]
md1.tbl
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.tbl <- data.frame(coef(md1))[c(1:nrow(teams)),-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
row.names(md1.tbl) <- NULL
md1.tbl
coef(md1.tbl)
coef(md1.tbl$attack)
(md1.tbl$attack)
class(md1.tbl$attack)
exp(md1.tbl)
funlist(md1.tbl, exp)
library(plyr)
library(dplyr)
funlist(md1.tbl, exp)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.tbl
md1
subset(dat)
rowSums
rowSums(dat)
names(dat)
rowSums(dat[5:7])
rowSums(dat[,5:7])
apply(dat,2,sum)
apply(dat,1,sum)
sum(dat$home.score)
table
table(dat)
melt(home.team~home.score,data=dat)
library(reshape)
library(reshape2)
melt(home.team~home.score,data=dat)
args(melt)
dcast(home.team~home.score,data=dat)
args(dcast)
dcast(home.team~home.score+away.score,data=dat)
dcast(home.team~home.score,data=dat)
summary(dat)
by(dat$home.team,dat$homescore,sum)
args(tapply)
tapply(dat,sum)
aggregate(dat$home.score,dat$home.score)
aggregate(dat$home.score,dat$home.score, sum)
aggregate(dat$home.score,dat$home.score, SUM)
aggregate(dat$home.score, list(dat$home.score), sum)
apply(dat,1,sum)
apply(dat$home.score,1,sum)
apply(dat,1,function(x) sum(x))
apply(dat,1,function(x) sum(x$home.score))
apply(dat$home.score,1,function(x) sum(x))
cast(home.team~home.score,data=dat)
dcast(home.team~home.score,data=dat)
args(tapply)
tapply(dat, sum)
tapply(dat, 1, function(x） sum(x))
ddply(dat, "home.team", summarise,
score    = sum(home.score),
mean = mean(home.score),
sd   = sd(home.score),
se   = sd / sqrt(nrow(dat)))
sim <- simulate(md1)
md1
dat
head(dat)
sim2 <- simulate(md2, hdv=='1')
sim2 <- simulate(md2, 'hdv')
sim2 <- simulate(md2, dat$hdv)
sim2 <- simulate(md2, venue=1)
sim2 <- simulate(md2, venue='1')
sim2 <- simulate(md2, venue='Cardiff City Stadium')
args(simulate)
sim2 <- simulate(md2, hvd=1)
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off date
# Simulate model 1
# Example : predict a match kick-off on 2014-05-13
sim1 <- simulate(md1)
predict(sim1, date=as.Date('2014-05-13'))
# Simulate model 2
sim2 <- simulate(md2, hdv=1)
#Extra arguments (besides team and venue) passed in should correspond to columns in the team or match files.
#The following extra arguments are not in the team or match files (names are not case sensitive): hvd
predict(sim2, hdv=1, date=as.Date('2014-05-13'))
# Simulate model 3
# Example : predict a match kick-off at Cardiff City Stadium on 2014-05-13
sim3 <- simulate(md3, venue='Cardiff City Stadium')
predict(sim3, venue='Cardiff City Stadium', date=as.Date('2014-05-13'))
install.packages(c("actuar", "fda", "httr", "packrat", "quantmod", "roxygen2", "stringdist", "stringi"))
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
library(shiny)
library(fbRanks)
library(XML)
library(plyr)
library(dplyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
dat$venue <- as.character(dat$venue)
teams <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
dat$hdv <- ifelse(dat$home.team==teams$name & dat$venue==teams$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
#match(dat$home.team,teams$name)
#match(dat$venue,teams$venue)
rm(url, tbl)
save(dat, file='dat.Rda')
# ===============================================================================
# Dixon & Coles poisson model, we can also add some more effect like weather, pitch condition, home ground advantages etc.
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date)) #without other effects
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #with home team advantage
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with venue effects
# -------------------------------------------------------------------------------
# model 1 measure the team attack and defence index.
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.tbl <- data.frame(coef(md1))[c(1:nrow(teams)),-1]; names(md1.tbl) <- c('attack','defence')
md1.tbl <- data.frame(team=sort(as.character(teams$name)),md1.tbl)
md1.tbl$attack <- exp(md1.tbl$attack); md1.tbl$defence <- exp(md1.tbl$defence); row.names(md1.tbl) <- NULL
md1.hm <- ddply(dat, "home.team", summarise, score = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(dat)))
md1.aw <- ddply(dat, "away.team", summarise, score = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(dat)))
# model 2 measure the team attack, defence and home ground advantage index.
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.tbl <- data.frame(coef(md2))[c(1:nrow(teams)),-1]; names(md2.tbl) <- c('attack','defence')
md2.tbl <- data.frame(team=sort(as.character(teams$name)),md2.tbl)
md2.tbl$attack <- exp(md2.tbl$attack); md2.tbl$defence <- exp(md2.tbl$defence); row.names(md2.tbl) <- NULL
md2.hm <- ddply(dat, "home.team", summarise, score = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(dat)))
md2.aw <- ddply(dat, "away.team", summarise, score = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(dat)))
# model 3 measure the team attack, defence and venue index.
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.tbl <- data.frame(coef(md3))[c(1:nrow(teams)),-1]; names(md3.tbl) <- c('attack','defence')
md3.tbl <- data.frame(team=sort(as.character(teams$name)), md3.tbl)
md3.tbl$attack <- exp(md3.tbl$attack); md3.tbl$defence <- exp(md3.tbl$defence); row.names(md3.tbl) <- NULL
md3.hm <- ddply(dat, "home.team", summarise, score = sum(home.score), mean = mean(home.score),
sd = sd(home.score), se = sd/sqrt(nrow(dat)))
md3.aw <- ddply(dat, "away.team", summarise, score = sum(away.score), mean  = mean(away.score),
sd = sd(away.score), se = sd/sqrt(nrow(dat)))
# ===============================================================================
# Simulate the venue (home ground advantage and neutral ground), and predict a specific kick-off date
# Simulate model 1
# Example : predict a match kick-off on 2014-05-13
sim1 <- simulate(md1)
predict(md1, date=as.Date('2014-05-13'))
# Simulate model 2
sim2 <- simulate(md2, hdv=1)
#Extra arguments (besides team and venue) passed in should correspond to columns in the team or match files.
#The following extra arguments are not in the team or match files (names are not case sensitive): hvd
predict(md2, hdv=1, date=as.Date('2014-05-13'))
# Simulate model 3
# Example : predict a match kick-off at Cardiff City Stadium on 2014-05-13
sim3 <- simulate(md3, venue='Cardiff City Stadium')
predict(md3, venue='Cardiff City Stadium', date=as.Date('2014-05-13'))
library('magrittr')
mydir <- paste0(getwd(),'/GitHub/englianhu/Dixon-Coles1996')
setwd(mydir)
library(knitr)
library(markdown)
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html('Dixon-Coles1996.Rmd')
browseURL('Dixon-Coles1996.html')
mydir
getwd(mydir)
dir()
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html('Dixon-Coles1996.Rmd')
browseURL('Dixon-Coles1996.html')
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html('Dixon-Coles1996.Rmd')
browseURL('Dixon-Coles1996.html')
pr1
attributes(pr1)
head(pr1$scores)
rsd
rsd1
atributes(rsd1)
attributes(rsd1)
mydir <- paste0(getwd(),'/GitHub/englianhu/Dixon-Coles1996')
setwd(mydir)
library(knitr)
library(markdown)
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html('Dixon-Coles1996.Rmd')
library(knitr)
library(markdown)
# knitr configuration
opts_knit$set(progress=FALSE)
opts_chunk$set(echo=TRUE, message=FALSE, tidy=TRUE, comment=NA,
fig.path="figure/", fig.keep="high", fig.width=10, fig.height=6,
fig.align="center")
knit2html('Dixon-Coles1996.Rmd')
browseURL('Dixon-Coles1996.html')
