md1.att
md1.def
coef(md1$fit$cluster.1)[-1:length(md1.att)+1)]
coef(md1$fit$cluster.1)[c(-1:length(md1.att)+1))]
coef(md1$fit$cluster.1)
coef(md1$fit$cluster.1)[-1]
coef(md1$fit$cluster.1)[-1:10]
coef(md1$fit$cluster.1)[-seq(1,10)]
coef(md1$fit$cluster.1)[-seq(1,20)]
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,length(md1.att))]
md1.att
md1.def
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[-seq(1,length(md2.att))]
md2.att
md2.def
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.att
md1.def
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[-seq(1,nrow(md2.teams))]
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date))
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #home team advantage
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[-seq(1,nrow(md2.teams))]
attributes(md2)
md2$teams
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[-seq(1,nrow(md2$teams))]
md.att;md.def
md2.att; md2.def
md2.att
md2.def
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams),nrow(md2$teams)*2)]
md2.def
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams),nrow(md2$teams)*2)-1]
md2.def
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.def
length(md2.def)
length(md2.att,md2.def)
length(md2.att+md2.def)
length(md2.att)
length(md2.att)+length(md2.def)
md2.hdv <- coef(md2$fit$cluster.1)[nrow(md2$teams):length(coef(md2$fit$cluster.1))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams):length(coef(md2$fit$cluster.1)))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)*2:length(coef(md2$fit$cluster.1)))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[nrow(md2$teams)*2:length(coef(md2$fit$cluster.1))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:nrow(md2$teams)*2)]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2)-1)]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2))-1]
md2.hdv
md2
coef(md2$fit$cluster.1)
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2)-1)]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq((nrow(md2$teams)*2))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2)+1)]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(1:(nrow(md2$teams)*2+1))]
md2.hdv
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.hdv
length(coef(md2$fit$cluster.1))
length(md2.att)
length(md2.def)
length(md2.hdv)
coef(md2$fit$cluster.1)
md2.hdv
sum(md2.hdv)
-sum(md2.hdv)
coef(md2.hdv)
(md2.hdv)
dat
dat$home.team
levels(dat$home.team)
dat[dat$home.team %in% levels(dat$home.team)]
dat[dat$home.team %in% levels(dat$home.team),]
unique(dat)
dat[unique(dat$home.team) & unique(dat$venue), ]
dat[dat$home.team %in% unique(dat$home.team) & dat$venue %in% unique(dat$venue), ]
dat[unique(dat$venue), ]
dat[unique(dat$venue) & order(dat$date, decresing=F), ]
dat[order(dat$date, decresing=F),][unique(dat$venue), ]
dat[order(dat$date, decresing=F),]
dat[order(dat$date, decresing=F)]
order(dat$date, decresing=F)
dat[order(dat$date, decreasing=F),][unique(dat$venue), ]
dat[order(dat$date, decresing=F) & unique(dat$venue), ]
dat[order(dat$date, decresing=F),]
dat[order(dat$date, decreasing=F),]
dat[order(dat$date, decreasing=F) & unique(dat$venue), ]
dat[unique(dat$venue), ]
dat[unique(dat$home.team) & unique(dat$venue), ]
dat[unique(dat$home.team),][,unique(dat$venue), ]
dat[!duplicate(dat$home.team) & unique(dat$venue), ]
dat[!duplicated(dat$home.team) & unique(dat$venue), ]
dat[duplicated(dat$home.team) & unique(dat$venue), ]
subset(dat, unique(venue))
subset(dat, subset=unique(venue))
subset(dat, subset='venue')
subset(dat, subset='venue'==unique)
dat[unique(dat$venue),]
hmd <- dat[unique(dat$venue),]
ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue,1,0)
sum(ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue,1,0))
hmd <- dat[!duplicated(dat$venue),]
hmd
nrow(hmd)
sum(ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue,1,0))
ifelse(dat$home.team==hmd$home.team && dat$venue==hmd$venue,1,0)
sum(ifelse(dat$home.team==hmd$home.team | dat$venue==hmd$venue,1,0))
sum(ifelse((dat$home.team==hmd$home.team) & (dat$venue==hmd$venue),1,0))
dat$hdv <- ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue,1,0)
dat
dat[order(dat$date, decreasing=F) & !duplicated(dat$venue),]
dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),]
hmd <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),]
dat$hdv <- ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue,1,0)
sum(dat$hdv)
head(dat)
dat[1:20,]
dat[1:20,]
attr(dat$home.team)
(dat$home.team)
levels(dat$home.team)
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
dat
attr(dat$away.venue,'levels') <- levels(factor(dat$venue))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
dat
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
hmd <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),]
hmd
levels(hmd$home.team)
dat$hdv <- ifelse(dat$home.team==levels(hmd$home.team) & dat$venue==levels(hmd$venue),1,0)
sum(dat$hdv)
dat
sum(ifelse(dat$home.team %in% levels(hmd$home.team) & dat$venue %in% levels(hmd$venue),1,0))
hmd$venue
hmd$home.team
levels(hmd$venue)
levels(hmd$venue,sort=F)
args(levels)
sum(ifelse(dat$home.team %in% as.character(hmd$home.team) & dat$venue %in% as.character(hmd$venue),1,0))
sum(ifelse(dat$home.team == as.character(hmd$home.team) & dat$venue == as.character(hmd$venue),1,0))
apply(dat, 1, function(x) x['home.team'] )
apply(dat, 1, function(x) x['home.team']==hmd['home.team'] )
hmd
hmd$venue
levels(hmd$venue)
dat$venue
levels
factor
factor(hmd$away.team, label=hmd$venue)
factor(hmd$away.team, levels=hmd$venue)
match(dat$venue,hmd$venue)
ifelse(match(dat$home.team,hmd$home.team) & match(dat$venue,hmd$venue),1,0)
ifelse(match(dat$home.team,hmd$home.team) == match(dat$venue,hmd$venue),1,0)
match(dat$home.team,hmd$home.team)
match(dat$venue,hmd$venue)
ifelse(dat[match(dat$home.team,hmd$home.team),] & dat[match(dat$venue,hmd$venue),],1,0)
match(dat$home.team,hmd$venue)
match(hmd$home.team, dat$home.team)
library(fbRanks)
library(XML)
library(plyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
dat[which(dat$home.team)]
hmd <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),]
dat[which(dat$home.team == hmd$home.team),]
dat[which(dat$home.team == hmd$home.team & dat$venue == hmd$venue),]
nrow(dat[which(dat$home.team == hmd$home.team & dat$venue == hmd$venue),])
rm(hmd)
dat$hdv <- ifelse(dat$home.team==levels(hmd$home.team) & dat$venue==levels(hmd$venue),1,0)
match(dat$home.team,hmd$home.team)
match(dat$venue,hmd$venue)
rm(url, tbl, hmd)
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date))
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #home team advantage
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
library(fbRanks)
library(XML)
library(plyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
hmd <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),]
dat$hdv <- ifelse(dat$home.team==levels(hmd$home.team) & dat$venue==levels(hmd$venue),1,0)
match(dat$home.team,hmd$home.team)
match(dat$venue,hmd$venue)
rm(url, tbl, hmd)
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date))
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #home team advantage
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.hdv
exp(md2.hdv)
View(dat)
library('xlsx')
save.csv(dat)
write.csv(dat)
write.csv(dat,'dat.csv')
dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),]
dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
hmd <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
hmd
apply(dat,1,function(x) x[hmd['home.team'],hmd['venue']])
apply(dat,1,function(x) x[hmd['home.team']])
apply(dat,1,function(x) x==[hmd['home.team']])
apply(dat,1,function(x) x==hmd$home.team)
apply(dat,1,function(x) x$home.team==hmd$home.team)
apply(dat,1,function(x) x['home.team']==hmd$home.team)
regpex
regprex
regpr
regexpr
regexpr(dat,hmd$home.team)
regexpr(dat$home.team,hmd$home.team)
regexpr(hmd$home.team, dat$home.team)
dat$hdv <- ifelse(dat$home.team==levels(hmd$home.team) & dat$venue==levels(hmd$venue),1,0) # data error:only 33 matches home ground among 380 matches
sum(dat$hdv)
ifelse(dat[match(dat$home.team,hmd$home.team),] & dat[match(dat$venue,hmd$venue),],1,0)
dat[match(dat$home.team,hmd$home.team),]
match(dat$home.team,hmd$home.team)
args(match)
args(match_all)
data.frame(match(dat$home.team,hmd$home.team),
match(dat$venue,hmd$venue))
apply(dat, 1, function(x) x$home.team)
apply(dat$home.team, 1, function(x) x==hmd$home.team)
args(grep)
args(grepl)
grepl(hmd$venue,dat$venue)
apply(dat,1, function(x) grepl(hmd$venue,x$venue))
apply(dat$venue,1, function(x) grepl(hmd$venue,x))
relevel
relevel(hmd$venue,hmd$venue)
relevel(hmd$venue,hmd$venue[1])
level(hmd$venue)
levels(hmd$venue)
(hmd$venue)
as.character((hmd$venue))
dat[match(dat$home.team,as.character(hmd$home.team)),]
dat$hdv <- ifelse(dat$home.team==as.character(hmd$home.team) & dat$venue==as.character(hmd$venue),1,0) # data error:only 33 matches home ground among 380 matches
sum(dat$hdv)
dat$hdv <- ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue,1,0) # data error:only 33 matches home ground among 380 matches
sum(dat$hdv)
dat$hdv <- ifelse(dat$home.team==hmd$home.team & dat$venue==hmd$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
match(dat$home.team,hmd$home.team)
match(dat$venue,hmd$venue)
rm(url, tbl, hmd)
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date))
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #home team advantage
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md2.hdv
exp(md2.hdv)
match(dat$home.score,hmd$home.score)
md1.att
exp(md1.att)
md1.df <- data.frame(att=exp(md1.att),def=xep(md1.def));md1.df
md1.df <- data.frame(att=exp(md1.att),def=exp(md1.def));md1.df
md1.att
md1.def
-sum(md1.def)
exp(-sum(md1.def))
exp(md1.def)
coef(md1$fit$cluster.1)
coef(md1$fit$cluster.2)
coef(md1$fit$cluster.3)
coef(md2$fit$cluster.2)
md1
exp(md1.att)
md2
exp(md2.att)
md2.att
md3 <- rank.teams(dat, teams=dat$home.team,min.date=min(dat$date),max.date=max(dat$date))
md3 <- rank.teams(dat, teams=dat['home.team'],min.date=min(dat$date),max.date=max(dat$date))
md3 <- rank.teams(dat, teams=dat,min.date=min(dat$date),max.date=max(dat$date))
library(fbRanks)
library(XML)
library(plyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
teams <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
dat$hdv <- ifelse(dat$home.team==teams$name & dat$venue==teams$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
match(dat$home.team,teams$name)
match(dat$venue,teams$venue)
rm(url, tbl)
teams
md3 <- rank.teams(dat, teams=teams,min.date=min(dat$date),max.date=max(dat$date))
teams
args(ranks)
args(team.ranks)
args(team.rank)
args(rank.teams)
rank.teams(dat, teams=teams,min.date=min(dat$date),max.date=max(dat$date))
names(dat)
rank.teams(dat[-4], teams=teams,min.date=min(dat$date),max.date=max(dat$date))
rank.teams(dat,min.date=min(dat$date),max.date=max(dat$date))
rank.teams(dat[-4], teams=teams,min.date=min(dat$date),max.date=max(dat$date),add='venue')
rank.teams(dat, teams=teams,min.date=min(dat$date),max.date=max(dat$date),add='venue')
-sum(md1.def)
-sum(md1.att)
exp(-sum(md1.att))
-sum(md1.def)
1-sum(md1.def)
exp(1-sum(md1.def))
md1
md2
print(md1,dat$hdv)
print(md1,hdv)
print(md1,hmd)
print(md1,teams)
md1.att
sum(md1.att)
sum(md1.def)
sum(md1.att)+
sum(md1.def)
exp(-sum(md1.att))
exp(-sum(md1.def))
mean(exp(md1.att))
mean(exp(md1.def))
mean(exp(md2.att))
mean(exp(md2.def))
md1
md1$attack
attributes(md1)
md1$fit
2.47+1.26
(2.47+1.26)/2
View(dat)
write.csv(dat,'dat.csv')
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with explanatory variable - venue
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.df <- data.frame(att=exp(md1.att),def=exp(md1.def))
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
md3.hdv
simulate(md1)
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
library(shinyAce)
library('shinyAce')
install.packages('shinyAce')
install.packages(c("shinyBS", "shinyFiles", "shinyRGL"))
shiny::runApp('C:/Users/Scibrokes Trading/Desktop')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/Shiny (test)')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/Shiny (test)')
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/Shiny (test)')
Q
shiny::runApp('C:/Users/Scibrokes Trading/Desktop/Shiny (test)')
Q
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
Q
library(shiny)
library(fbRanks)
library(XML)
library(plyr)
# get the English Premier League 2013/2014 from official website
url = getURL('http://www.premierleague.com/en-gb/matchday/results.html?paramClubId=ALL&paramComp_8=true&paramSeason=2013-2014&view=.dateSeason')
tbl <- readHTMLTable(htmlParse(url),header='text'); tbl[[length(tbl)]] <- NULL
tbl <- lapply(tbl,function(x) {x$V1 = x$V1[1]; x[-1,]})
dat <- Reduce(function(x, y) merge(x, y, all = T),
tbl, accumulate = F)[1:5]
dat$HG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[1])))
dat$AG <- as.numeric(unlist(lapply(str_split(as.character(dat$V3),'-'),function(x) x[2])))
dat$V3 <- NULL
names(dat) <- c('date','home.team','away.team','venue','home.score','away.score')
dat$date <- unlist(lapply(str_split(dat$date,' '),function(x) paste(x[-1],collapse='')))
dat$date <- as.Date(dat$date, "%d%B%Y")
attr(dat$home.team,'levels') <- levels(factor(dat$home.team))
attr(dat$away.team,'levels') <- levels(factor(dat$away.team))
attr(dat$venue,'levels') <- levels(factor(dat$venue))
teams <- dat[order(dat$date, decreasing=T) & !duplicated(dat$venue),][c('home.team','venue')]
names(teams)[1] <- 'name'
dat$hdv <- ifelse(dat$home.team==teams$name & dat$venue==teams$venue, 1, 0) # data error:only 33 matches home ground among 380 matches
#match(dat$home.team,teams$name)
#match(dat$venue,teams$venue)
rm(url, tbl)
# Dixon & Coles poisson model
md1 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date)) #without explanatory variable
md2 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='hdv') #with explanatory variable - home team advantage
md3 <- rank.teams(dat, min.date=min(dat$date),max.date=max(dat$date),add='venue') #with explanatory variable - venue
md1.att <- coef(md1$fit$cluster.1)[1:nrow(md1$teams)]
md1.def <- coef(md1$fit$cluster.1)[-seq(1,nrow(md1$teams))]
md1.df <- data.frame(att=exp(md1.att),def=exp(md1.def))
md2.att <- coef(md2$fit$cluster.1)[1:nrow(md2$teams)]
md2.def <- coef(md2$fit$cluster.1)[seq(nrow(md2$teams)+2,nrow(md2$teams)*2)-1]
md2.hdv <- coef(md2$fit$cluster.1)[-seq(nrow(md2$teams)*2)+1]
md3.att <- coef(md3$fit$cluster.1)[1:nrow(md3$teams)]
md3.def <- coef(md3$fit$cluster.1)[seq(nrow(md3$teams)+2,nrow(md3$teams)*2)-1]
md3.hdv <- coef(md3$fit$cluster.1)[-seq(nrow(md3$teams)*2)+1]
attributes(md1)
md1$scores
head(md1$scores)
attributes(md1)
head(md1$fit)
head(md1$fit)$cluster.1
md1$fit$cluster.1
length(md1$fit$cluster.1)
coef(md1$fit$cluster.1)
attributes(md1$fit$cluster.1)
md1$fit$cluster.1$fitted.values
md1$fit$cluster.1$linear.predictor
coef(md1$fit$cluster.1)
length(coef(md1$fit$cluster.1))
exp(0)
load("C:/Users/Scibrokes Trading/Downloads/mousedata.rda")
mat
head(mat)
head(mat)[1:3,]
head(mat)[1:6]
head(mat)
simulate(md1)
View(dat)
save(dat, file='dat.Rda')
shiny::runApp('GitHub/englianhu/Dixon-Coles1996')
